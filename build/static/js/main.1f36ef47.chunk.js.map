{"version":3,"sources":["fsm/useMachine.jsx","components/AddSong/AddSong.jsx","socketContext.js","components/Playlist/usePlaylist.js","components/Playlist/Playlist.jsx","components/Player/Player.jsx","components/SocialPlayer/SocialPlayer.jsx","components/Login/LoginMachineState.js","components/Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStateMachine","spec","useReducer","currentState","event","stateTransitions","states","undefined","Error","nextState","buildMachineReducer","initialState","AddSong","props","useState","newSong","setNewSong","error","setError","onSubmit","preventDefault","url","p","match","matchYoutubeUrl","onNewSong","className","data-testid","type","placeholder","value","onChange","target","length","SocketContext","React","createContext","SocketProvider","children","socket","io","transports","reconnection","autoConnect","Provider","NEW_SONG_EVENT","HISTORY_PLAYLIST_EVENT","UPDATE_PLAYLIST_EVENT","usePlaylist","playlist","setPlaylist","useContext","useEffect","emit","newSongHandler","song","historyHandler","on","off","disconnect","addSong","updatePlaylist","getCurrent","ListItem","onClick","onRemove","Playlist","handleRemove","listItems","map","i","Player","style","height","width","controls","playing","muted","onEnded","onSongEnded","SocialPlayer","Logout","onDisconnect","handleSongEnded","id","Date","getTime","toString","findIndex","item","console","log","loginMachine","disconnected","CONNECT","connecting","CONNECTION_SUCCESS","CONNECTION_ERROR","connected","DISCONNECT","Disconnected","loading","onConnect","Login","sendEvent","open","connectHandler","errorHandler","initHandler","setTimeout","_","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f36ef47.chunk.js","sourcesContent":["import {useReducer} from \"react\";\r\n\r\nexport const buildMachineReducer = (spec) => (currentState, event) => {\r\n    //  get all possible transitions for the current State\r\n    const stateTransitions = spec.states[currentState];\r\n\r\n    // check transition exists\r\n    if (stateTransitions === undefined) {\r\n        throw new Error(`No transitions defined for ${currentState}`);\r\n    }\r\n    // next stage\r\n    const nextState = stateTransitions[event];\r\n\r\n    if (nextState === undefined) {\r\n        throw new Error(\r\n            `Unknown transition for event ${event} in state ${currentState}`\r\n        );\r\n    }\r\n    return nextState;\r\n};\r\n\r\nexport const useStateMachine = (spec) => {\r\n    return useReducer(buildMachineReducer(spec), spec.initialState);\r\n};\r\n","import React, {useState} from \"react\";\r\nimport \"./AddSong.scss\"\r\n\r\nfunction AddSong(props) {\r\n\r\n    const [newSong, setNewSong] = useState('');\r\n    const [error, setError] = useState('');\r\n    const handleNewSongChange = (event) => {\r\n        setError('');\r\n        setNewSong(event.target.value);\r\n    };\r\n\r\n    function matchYoutubeUrl(url) {\r\n        let p = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n        if (url.match(p)) {\r\n            return url.match(p)[1];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (matchYoutubeUrl(newSong)) {\r\n            props.onNewSong(newSong);\r\n            setNewSong('');\r\n        } else {\r\n            setError('please insert a valid youtube video url');\r\n        }\r\n\r\n    };\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={handleSubmit} className=\"add-song-container\">\r\n                <input data-testid=\"song-url\" className=\"add-song-input\" type=\"text\" placeholder={\"Enter video id\"} value={newSong}\r\n                       onChange={handleNewSongChange}/>\r\n                <div className=\"spacer\"></div>\r\n                <button className=\"add-song-button\" data-testid=\"add-song\" type=\"submit\">Add Song</button>\r\n            </form>\r\n            {error.length > 0 &&\r\n            <div className=\"error\">\r\n                {error}\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddSong;\r\n","import React from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nconst SocketProvider = ({ children }) => {\r\n   // const ENDPOINT = 'https://socket-chat-ak.herokuapp.com/';\r\n    const ENDPOINT = \"http://localhost:4000\";\r\n    const socket = io(ENDPOINT, { transports: ['websocket', 'polling'], reconnection: false, autoConnect: false })\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport { SocketContext, SocketProvider }\r\n","import {useContext, useEffect, useState} from \"react\";\r\nimport {SocketContext} from \"../../socketContext\";\r\n\r\nconst NEW_SONG_EVENT = \"newSongEvent\";\r\nconst HISTORY_PLAYLIST_EVENT = \"historyPlaylistEvent\";\r\nconst UPDATE_PLAYLIST_EVENT = \"updatePlaylistEvent\";\r\nconst GET_HISTORY_EVENT = \"getHistoryEvent\";\r\n\r\n\r\nconst usePlaylist = () => {\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const socket = useContext(SocketContext);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!playlist.length) {\r\n            socket.emit(GET_HISTORY_EVENT);\r\n        }\r\n        const newSongHandler = (song) => {\r\n            setPlaylist((playlist) => [...playlist, song]);\r\n        }\r\n        const historyHandler = (playlist) => {\r\n            setPlaylist(() => playlist);\r\n        }\r\n        socket.on(NEW_SONG_EVENT, newSongHandler);\r\n        socket.on(HISTORY_PLAYLIST_EVENT, historyHandler);\r\n        socket.on(UPDATE_PLAYLIST_EVENT, historyHandler);\r\n\r\n        return () => {\r\n            socket.off(NEW_SONG_EVENT, newSongHandler);\r\n            socket.off(HISTORY_PLAYLIST_EVENT, historyHandler);\r\n            socket.off(UPDATE_PLAYLIST_EVENT, historyHandler)\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    const addSong = (song) => {\r\n        socket.emit(NEW_SONG_EVENT, song);\r\n    };\r\n    const updatePlaylist = (song) => {\r\n        socket.emit(UPDATE_PLAYLIST_EVENT, song);\r\n    };\r\n    const getCurrent = () => {\r\n        return playlist[0] || '';\r\n    };\r\n\r\n\r\n    return {playlist, addSong, updatePlaylist, getCurrent};\r\n};\r\n\r\nexport default usePlaylist;\r\n","import React from \"react\";\r\nimport \"./Playlist.scss\"\r\n\r\nfunction ListItem(props) {\r\n    const song = props.song;\r\n    const handleRemove = () => {\r\n        props.onRemove(song);\r\n    }\r\n    return (\r\n        <div className=\"song-container\">\r\n            <div data-testid=\"song-item\" className=\"song-item\">{song.url}</div>\r\n            <button className=\"btn \" onClick={handleRemove}>X</button>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nfunction Playlist(props) {\r\n    const playlist = props.playlist;\r\n    const handleRemove = (song) => {\r\n        props.onRemove(song);\r\n    }\r\n    const listItems = playlist.map((song, i) =>\r\n        <ListItem key={i} onRemove={handleRemove}\r\n                  song={song}/>\r\n    );\r\n    return (\r\n        <div data-testid=\"song-list\" className=\"song-list\">\r\n            {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playlist;\r\n","import ReactPlayer from \"react-player\";\r\nimport \"./Player.scss\"\r\n\r\nfunction Player(props) {\r\n    const song = props.song;\r\n    const handleOnEnded = () => {\r\n        props.onSongEnded(song);\r\n    }\r\n    return (\r\n        <div style={{height: '100%'}}>\r\n            {\r\n                song.url ?\r\n                    <ReactPlayer url={song.url}\r\n                        //key={song.id} // support duplicate song url\r\n                                 width='100%'\r\n                                 height='100%'\r\n                                 controls={false}\r\n                                 playing={true}\r\n                                 muted={false}\r\n                                 onEnded={handleOnEnded}\r\n                    />\r\n                    : <div className=\"empty-playlist\"> Please add some songs to playlist</div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport \"./SocialPlayer.scss\";\r\nimport AddSong from \"../AddSong/AddSong\";\r\nimport usePlaylist from \"../Playlist/usePlaylist\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\nimport Player from \"../Player/Player\";\r\n\r\n\r\nconst SocialPlayer = (props) => {\r\n    const {playlist, addSong, updatePlaylist, getCurrent} = usePlaylist();\r\n    const Logout = () => (\r\n        <div>\r\n            <button className=\"logout\" onClick={props.onDisconnect}>Disconnect</button>\r\n        </div>\r\n    );\r\n    const handleAddSong = (url) => {\r\n        const id = new Date().getTime().toString(); // unique number\r\n        if (playlist.findIndex(item => item.url === url) > -1) {\r\n            console.log('found duplicate song , will not be added to the list')\r\n        } else {\r\n            addSong({url, id});\r\n        }\r\n    };\r\n    const handleSongEnded = (song) => {\r\n        updatePlaylist(song);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"songs-container\">\r\n                <AddSong onNewSong={handleAddSong}/>\r\n                <Playlist playlist={playlist} onRemove={handleSongEnded}/>\r\n            </div>\r\n            <div data-testid=\"player-container\" className=\"player-container\">\r\n                <Player song={getCurrent()} onSongEnded={handleSongEnded}/>\r\n            </div>\r\n            <Logout/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SocialPlayer;\r\n","export const loginMachine = {\r\n    initialState: \"disconnected\",\r\n    states: {\r\n        disconnected: {\r\n            CONNECT: \"connecting\",\r\n        },\r\n        connecting: {\r\n            CONNECTION_SUCCESS: \"connected\",\r\n            CONNECTION_ERROR: \"error\",\r\n        },\r\n        connected: {\r\n            DISCONNECT: \"disconnected\",\r\n        },\r\n        error: {\r\n            CONNECT: \"connecting\",\r\n        },\r\n    },\r\n};\r\n","import React, {useContext, useEffect} from \"react\";\r\nimport {useStateMachine} from \"../../fsm/useMachine\";\r\nimport SocialPlayer from \"../SocialPlayer/SocialPlayer\";\r\nimport './Login.scss'\r\nimport {SocketContext} from \"../../socketContext\";\r\nimport {loginMachine} from \"./LoginMachineState\";\r\n\r\n\r\nconst Disconnected = (props) => (\r\n    <div className=\"login-container  \">\r\n        <div className=\" overlay overlay-panel overlay-right\">\r\n            <h1>Welcome to Social Music Player!</h1>\r\n            <p>Connect to stream and start your journey with us</p>\r\n            {props.loading ? <button className=\"loading\"></button> :\r\n                <button onClick={props.onConnect} className=\"connect\">Connect</button>}\r\n            {props.error ? <div className=\"error-message\">Oops something went wrong, try again</div> : ''}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst Login =  () => {\r\n    const [currentState, sendEvent] = useStateMachine(loginMachine);\r\n    const socket = useContext(SocketContext);\r\n    const onConnect = () => {\r\n        sendEvent('CONNECT');\r\n    }\r\n\r\n    const onDisconnect = () => {\r\n        sendEvent(\"DISCONNECT\")\r\n        socket.disconnect();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentState === \"connecting\") {\r\n            if (socket.disconnected) {\r\n                socket.open();\r\n            }\r\n            socket.emit('login');\r\n        }\r\n        const connectHandler = () => {\r\n            if (currentState === \"disconnected\") {\r\n                sendEvent('CONNECT');\r\n            }\r\n        }\r\n        const errorHandler = (error) => {\r\n            if (currentState === \"connecting\") {\r\n                sendEvent('CONNECTION_ERROR');\r\n            }\r\n        }\r\n        const disconnectHandler = () => {\r\n            socket.disconnect();\r\n        }\r\n        const initHandler = () => {\r\n            if (currentState === \"connecting\") {\r\n                setTimeout(_ => {\r\n                    sendEvent('CONNECTION_SUCCESS');\r\n                }, 3000)\r\n\r\n            }\r\n        }\r\n        socket.on('connect', connectHandler);\r\n        socket.on('connect_error', errorHandler);\r\n        socket.on('disconnect', disconnectHandler);\r\n        socket.on('ready', initHandler);\r\n\r\n\r\n        return () => {\r\n            // before the component is destroyed unbind all event handlers used in this component\r\n            socket.off('connect', connectHandler);\r\n            socket.off('connect_error', errorHandler);\r\n            socket.off('disconnect', errorHandler);\r\n            socket.off(\"ready\", initHandler);\r\n\r\n        };\r\n    }, [currentState, sendEvent, socket]);\r\n\r\n    switch (currentState) {\r\n        case \"disconnected\":\r\n            return <Disconnected onConnect={onConnect}/>;\r\n        case \"connecting\":\r\n            return <Disconnected loading='true' onConnect={onConnect}/>;\r\n        case \"connected\":\r\n            return <div>\r\n                <SocialPlayer onDisconnect={onDisconnect}/>\r\n            </div>;\r\n        case \"error\":\r\n            return <Disconnected error='error occurred during connecting ' onConnect={onConnect}/>;\r\n        default:\r\n            throw new Error(`Don't know how to render state ${currentState}`);\r\n    }\r\n};\r\nexport default Login;\r\n","import React from \"react\";\nimport './App.scss';\nimport Login from \"./components/Login/Login\";\nimport {SocketProvider} from \"./socketContext\";\n\nfunction App() {\n    return (\n        <SocketProvider>\n            <div className=\"App\">\n                <Login></Login>\n            </div>\n        </SocketProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}